@using Services.Users
@using Services.Posts
@using OPC5_BlogApp.Data.Models
@using System.ComponentModel.DataAnnotations
@using System.ComponentModel.DataAnnotations.Schema
@inject IUserService userService
@inject IPostService postService
@rendermode InteractiveServer

<form class="dashboard-poster">
    <div>
        <div class="form-group">
            <label for="postContent" style="font-weight: bold;">Post Content</label>
            <textarea placeholder="Vad är det som händer?" id="postContent" class=" dashboard-poster-input" @bind="newPost.PostData"></textarea>
        </div>
        <hr />
        <button style="margin-top: 15px;" type="submit" class="btn btn-primary dashboard-poster-button" @onclick="HandlePost">Gör ett inlägg</button>

    </div>
</form>

<style>
    .dashboard-poster {
        width: 100%;
        background-color: black;
        border: 1px solid white;
        padding: 10px;

        border-top-left-radius: 5px;
        border-top-right-radius: 5px;

        /*margin-bottom: 5%;*/
    }

    .dashboard-poster-input {
        background-color: transparent;
        border: none;
        width: 90%;
        color: white;
        margin: 20px;
        resize: none;

        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
    }

    .dashboard-poster-input:hover {
        border: none;
        background-color: transparent;
    }

    .dashboard-poster-input:focus {
        border: none;
        outline: 0;
    }

    .dashboard-poster-button {
        margin-left: 77%;
        border-radius: 20px;
        font-weight: bold;
    }
</style>

@code {
    private User currentUser = new User();
    private Post newPost = new Post();

    private void HandlePost()
    {
        if (newPost.PostData == null)
        {
            Console.WriteLine("Returning since no message was entered.");
            StateHasChanged();

            return;
        }

        postService.AddPost(newPost);
        newPost = new Post();

        StateHasChanged();
    }
}

